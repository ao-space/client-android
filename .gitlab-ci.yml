# Copyright (c) 2022 Institute of Software, Chinese Academy of Sciences (ISCAS)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

image: registry.eulix.xyz/collab/infra/public-service/androidsdk:android-30

include:
  - project: 'bp/ams-ci-template'
    ref: main
    file: '/sonarqube.yml'
#   - project: 'bp/ams-ci-template'
#     ref: main
#     file: '/license.yml'
  - project: 'bp/ams-ci-template'
    ref: main
    file: '/cloc.yml'

variables:
  ENV_SONARQUBE_TYPE: gradle
  ENV_LICENSE_TYPE: gradle
  IS_LICENSE_SCANNING: 'false'
  IS_LICENSE_SHOW_REPORT: 'false'

stages:
  - license_check
  - license_fix
  - build
  - deploy
  - codelint
  - cloc
    
build_eulix:
  stage: build
  tags: 
    - docker-global-x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_ID
  script:
    - export PATH=$PATH:/opt/gradle-6.1.1/bin
    - gradle --init-script /root/.gradle/init.gradle clean
    - gradle --init-script /root/.gradle/init.gradle assembleEulix
  artifacts:
    paths:
    - app/build/outputs/apk/eulix/release/
    - app/build/outputs/mapping/

deploy_eulix:
  stage: deploy
  dependencies:
    - build_eulix
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == 'dev'
    - if: $CI_COMMIT_BRANCH == 'release'
    - if: $CI_COMMIT_BRANCH == 'main'
  script: 
    - cd app/build/outputs/apk/eulix/release
    - export ANDROID_APK_VERSION=$(cat ../../../../../build.gradle |  grep "versionName "| grep -Eo '([0-9]+\.+[0-9]+\.+[0-9]{1,2})')
    - export ANDROID_APK_NAME_V8=$CI_COMMIT_BRANCH-$(basename *v8a.apk .apk)-alpha.$CI_PIPELINE_ID
    - export ANDROID_APK_NAME_V7=$CI_COMMIT_BRANCH-$(basename *v7a.apk .apk)-alpha.$CI_PIPELINE_ID
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file $(basename app/build/outputs/apk/eulix/release/*v8a.apk) ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/eulixspace-android/${ANDROID_APK_VERSION}/${ANDROID_APK_NAME_V8}.apk'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file $(basename app/build/outputs/apk/eulix/release/*v7a.apk) ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/eulixspace-android/${ANDROID_APK_VERSION}/${ANDROID_APK_NAME_V7}.apk'
